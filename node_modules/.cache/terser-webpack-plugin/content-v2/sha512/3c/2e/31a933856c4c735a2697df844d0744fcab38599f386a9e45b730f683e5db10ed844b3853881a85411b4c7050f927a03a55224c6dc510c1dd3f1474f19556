{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{379:function(t,s,a){\"use strict\";a.r(s);var v=a(18),_=Object(v.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h2\",{attrs:{id:\"python语法规则\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#python语法规则\"}},[t._v(\"#\")]),t._v(\" python语法规则\")]),t._v(\" \"),a(\"p\",[t._v(\"python的格式十分严格，每行代码前面不要增加空格（代码有循环等逻辑的除外），否则会出现缩进错误。\"),a(\"br\"),t._v(\" \"),a(\"code\",[t._v(\"python 2.x\")]),t._v(\"默认不支持中文，它的解释器名称是\"),a(\"code\",[t._v(\"python\")]),t._v(\"。\"),a(\"br\"),t._v(\" \"),a(\"code\",[t._v(\"python 3.x\")]),t._v(\"的解释器支持中文，它的解释器名称是\"),a(\"code\",[t._v(\"python3\")]),t._v(\"。\"),a(\"br\"),t._v(\"\\n在终端中直接运行python解释器，退出时用\"),a(\"code\",[t._v(\"exit()\")]),t._v(\"或者\"),a(\"code\",[t._v(\"ctrl + d\")]),t._v(\"。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"算术运算符\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#算术运算符\"}},[t._v(\"#\")]),t._v(\" 算术运算符\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"基本运算符\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#基本运算符\"}},[t._v(\"#\")]),t._v(\" 基本运算符\")]),t._v(\" \"),a(\"table\",[a(\"thead\",[a(\"tr\",[a(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"运算符\")]),t._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"描述\")]),t._v(\" \"),a(\"th\",[t._v(\"实例\")])])]),t._v(\" \"),a(\"tbody\",[a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"//\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"取整除\")]),t._v(\" \"),a(\"td\",[t._v(\"返回除法的整数部分（商） 9 // 2 输出结果 4\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"%\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"取余数\")]),t._v(\" \"),a(\"td\",[t._v(\"返回除法的余数 9 % 2 = 1\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"**\")]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"幂\")]),t._v(\" \"),a(\"td\",[t._v(\"又称次方、乘方，2 ** 3 = 8\")])])])]),t._v(\" \"),a(\"p\",[t._v(\"在 Python 中 \"),a(\"code\",[t._v(\"*\")]),t._v(\" 运算符还可以用于字符串，计算结果就是字符串重复指定次数的结果\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-python extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[t._v(\"In \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"-\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),t._v(\"\\nOut\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'----------'\")]),t._v(\" \\n\")])])]),a(\"h3\",{attrs:{id:\"赋值运算符\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#赋值运算符\"}},[t._v(\"#\")]),t._v(\" 赋值运算符\")]),t._v(\" \"),a(\"table\",[a(\"thead\",[a(\"tr\",[a(\"th\",[t._v(\"运算符\")]),t._v(\" \"),a(\"th\",[t._v(\"描述\")]),t._v(\" \"),a(\"th\",[t._v(\"实例\")])])]),t._v(\" \"),a(\"tbody\",[a(\"tr\",[a(\"td\",[t._v(\"=\")]),t._v(\" \"),a(\"td\",[t._v(\"简单的赋值运算符\")]),t._v(\" \"),a(\"td\",[t._v(\"c = a + b 将 a + b 的运算结果赋值为 c\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"+=\")]),t._v(\" \"),a(\"td\",[t._v(\"加法赋值运算符\")]),t._v(\" \"),a(\"td\",[t._v(\"c += a 等效于 c = c + a\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"-=\")]),t._v(\" \"),a(\"td\",[t._v(\"减法赋值运算符\")]),t._v(\" \"),a(\"td\",[t._v(\"c -= a 等效于 c = c - a\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"*=\")]),t._v(\" \"),a(\"td\",[t._v(\"乘法赋值运算符\")]),t._v(\" \"),a(\"td\",[t._v(\"c *= a 等效于 c = c * a\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"/=\")]),t._v(\" \"),a(\"td\",[t._v(\"除法赋值运算符\")]),t._v(\" \"),a(\"td\",[t._v(\"c /= a 等效于 c = c / a\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"//=\")]),t._v(\" \"),a(\"td\",[t._v(\"取整除赋值运算符\")]),t._v(\" \"),a(\"td\",[t._v(\"c //= a 等效于 c = c // a\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"%=\")]),t._v(\" \"),a(\"td\",[t._v(\"取 \"),a(\"strong\",[t._v(\"模\")]),t._v(\" (余数)赋值运算符\")]),t._v(\" \"),a(\"td\",[t._v(\"c %= a 等效于 c = c % a\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"**=\")]),t._v(\" \"),a(\"td\",[t._v(\"幂赋值运算符\")]),t._v(\" \"),a(\"td\",[t._v(\"c **= a 等效于 c = c ** a\")])])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"运算符的优先级\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#运算符的优先级\"}},[t._v(\"#\")]),t._v(\" 运算符的优先级\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"同级运算符是 \"),a(\"strong\",[t._v(\"从左至右\")]),t._v(\" 计算\")]),t._v(\" \"),a(\"li\",[t._v(\"可以使用 \"),a(\"code\",[t._v(\"()\")]),t._v(\" 调整计算的优先级\")]),t._v(\" \"),a(\"li\",[t._v(\"以下表格的运算符优先级由高到最低顺序排列\")])]),t._v(\" \"),a(\"table\",[a(\"thead\",[a(\"tr\",[a(\"th\",[t._v(\"运算符\")]),t._v(\" \"),a(\"th\",[t._v(\"描述\")])])]),t._v(\" \"),a(\"tbody\",[a(\"tr\",[a(\"td\",[t._v(\"**\")]),t._v(\" \"),a(\"td\",[t._v(\"幂 (最高优先级)\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"* / % //\")]),t._v(\" \"),a(\"td\",[t._v(\"乘、除、取余数、取整除\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"+ -\")]),t._v(\" \"),a(\"td\",[t._v(\"加法、减法\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"<= < > >=\")]),t._v(\" \"),a(\"td\",[t._v(\"比较运算符\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"== !=\")]),t._v(\" \"),a(\"td\",[t._v(\"等于运算符\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"= %= /= //= -= += *= **=\")]),t._v(\" \"),a(\"td\",[t._v(\"赋值运算符\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"not or and\")]),t._v(\" \"),a(\"td\",[t._v(\"逻辑运算符\")])])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"变量的基本使用\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#变量的基本使用\"}},[t._v(\"#\")]),t._v(\" 变量的基本使用\")]),t._v(\" \"),a(\"p\",[t._v(\"在python中，定义变量时是不需要指定变量的类型，在运行时，python解释器会根据赋值语句等号右侧的的数据自动推导出变量中保存数据的准确类型。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"不同类型变量之间的计算\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#不同类型变量之间的计算\"}},[t._v(\"#\")]),t._v(\" 不同类型变量之间的计算\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[a(\"strong\",[t._v(\"数字型变量\")]),t._v(\" 之间可以直接计算\")])]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"在 Python 中，两个数字型变量是可以直接进行算数运算的\")]),t._v(\" \"),a(\"li\",[t._v(\"如果变量是 \"),a(\"code\",[t._v(\"bool\")]),t._v(\" 型，在计算时\\n\"),a(\"ul\",[a(\"li\",[a(\"code\",[t._v(\"True\")]),t._v(\" 对应的数字是 \"),a(\"code\",[t._v(\"1\")])]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"False\")]),t._v(\" 对应的数字是 \"),a(\"code\",[t._v(\"0\")])])])])]),t._v(\" \"),a(\"ol\",{attrs:{start:\"2\"}},[a(\"li\",[a(\"strong\",[t._v(\"字符串变量\")]),t._v(\" 之间使用 \"),a(\"code\",[t._v(\"+\")]),t._v(\" 拼接字符串\")])]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"在 Python 中，字符串之间可以使用 \"),a(\"code\",[t._v(\"+\")]),t._v(\" 拼接生成新的字符串\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-python extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[t._v(\"In \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" first_name \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"三\"')]),t._v(\"\\nIn \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" last_name \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"张\"')]),t._v(\"\\nIn \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" first_name \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" last_name\\nOut\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'三张'\")]),t._v(\"\\n\")])])]),a(\"ol\",{attrs:{start:\"3\"}},[a(\"li\",[a(\"strong\",[t._v(\"字符串变量\")]),t._v(\" 可以和 \"),a(\"strong\",[t._v(\"整数\")]),t._v(\" 使用 \"),a(\"code\",[t._v(\"*\")]),t._v(\" 重复拼接相同的字符串,但不能进行其他的计算\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-python extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[t._v(\"In \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"-\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"50\")]),t._v(\"\\nOut\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'--------------------------------------------------'\")]),t._v(\"\\n\")])])]),a(\"h4\",{attrs:{id:\"变量的输入\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#变量的输入\"}},[t._v(\"#\")]),t._v(\" 变量的输入\")]),t._v(\" \"),a(\"p\",[t._v(\"使用\"),a(\"code\",[t._v(\"input\")]),t._v(\"函数即可从键盘获得输入。\"),a(\"br\"),t._v(\"\\n例子：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-python extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[t._v(\"name \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"input\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"请输入姓名：\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),a(\"h4\",{attrs:{id:\"变量的格式化输出\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#变量的格式化输出\"}},[t._v(\"#\")]),t._v(\" 变量的格式化输出\")]),t._v(\" \"),a(\"p\",[t._v(\"如果希望输出文字信息的同时，一起输出数据，就需要使用到格式化操作符。\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"code\",[t._v(\"%\")]),t._v(\" 被称为 \"),a(\"strong\",[t._v(\"格式化操作符\")]),t._v(\"，专门用于处理字符串中的格式。\")]),t._v(\" \"),a(\"li\",[t._v(\"包含 \"),a(\"code\",[t._v(\"%\")]),t._v(\" 的字符串，被称为 \"),a(\"strong\",[t._v(\"格式化字符串\")])]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"%\")]),t._v(\" 和不同的 \"),a(\"strong\",[t._v(\"字符\")]),t._v(\" 连用，\"),a(\"strong\",[t._v(\"不同类型的数据\")]),t._v(\" 需要使用 \"),a(\"strong\",[t._v(\"不同的格式化字符\")])])]),t._v(\" \"),a(\"table\",[a(\"thead\",[a(\"tr\",[a(\"th\",[t._v(\"格式化字符\")]),t._v(\" \"),a(\"th\",[t._v(\"含义\")])])]),t._v(\" \"),a(\"tbody\",[a(\"tr\",[a(\"td\",[t._v(\"%s\")]),t._v(\" \"),a(\"td\",[t._v(\"字符串\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"%d\")]),t._v(\" \"),a(\"td\",[t._v(\"有符号十进制整数，\"),a(\"code\",[t._v(\"%06d\")]),t._v(\" 表示输出的整数显示位数，不足的地方使用 \"),a(\"code\",[t._v(\"0\")]),t._v(\" 补全\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"%f\")]),t._v(\" \"),a(\"td\",[t._v(\"浮点数，\"),a(\"code\",[t._v(\"%.2f\")]),t._v(\" 表示小数点后只显示两位\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"%%\")]),t._v(\" \"),a(\"td\",[t._v(\"输出 \"),a(\"code\",[t._v(\"%\")])])])])]),t._v(\" \"),a(\"p\",[t._v(\"语法格式如下：\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v('print(\"格式化字符串\" % 变量1)')]),t._v(\" \"),a(\"li\",[t._v('print(\"格式化字符串\" % (变量1, 变量2...))')])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"变量的命名\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#变量的命名\"}},[t._v(\"#\")]),t._v(\" 变量的命名\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"标识符和关键字\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#标识符和关键字\"}},[t._v(\"#\")]),t._v(\" 标识符和关键字\")]),t._v(\" \"),a(\"p\",[t._v(\"标识符就是程序员定义的 \"),a(\"strong\",[t._v(\"变量名\")]),t._v(\"、\"),a(\"strong\",[t._v(\"函数名\")])]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"标识符可以由 \"),a(\"strong\",[t._v(\"字母\")]),t._v(\"、\"),a(\"strong\",[t._v(\"下划线\")]),t._v(\" 和 \"),a(\"strong\",[t._v(\"数字\")]),t._v(\" 组成\")]),t._v(\" \"),a(\"li\",[t._v(\"不能以数字开头\")]),t._v(\" \"),a(\"li\",[t._v(\"不能与关键字重名\")])]),t._v(\" \"),a(\"p\",[t._v(\"关键字就是在 \"),a(\"code\",[t._v(\"Python\")]),t._v(\" 内部已经使用的标识符\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"strong\",[t._v(\"关键字\")]),t._v(\" 具有特殊的功能和含义\")]),t._v(\" \"),a(\"li\",[t._v(\"开发者 \"),a(\"strong\",[t._v(\"不允许定义和关键字相同的名字的标示符\")])])]),t._v(\" \"),a(\"p\",[t._v(\"通过以下命令可以查看 \"),a(\"code\",[t._v(\"Python\")]),t._v(\" 中的关键字\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-python extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[t._v(\"In \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"import\")]),t._v(\" keyword\\nIn \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"print\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"keyword\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"kwlist\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),a(\"h4\",{attrs:{id:\"变量的命名规则\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#变量的命名规则\"}},[t._v(\"#\")]),t._v(\" 变量的命名规则\")]),t._v(\" \"),a(\"p\",[t._v(\"注意 \"),a(\"code\",[t._v(\"Python\")]),t._v(\" 中的标识符是区分大小写的。\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"在定义变量时，为了保证代码格式，\"),a(\"code\",[t._v(\"=\")]),t._v(\" 的左右应该各保留一个空格\")]),t._v(\" \"),a(\"li\",[t._v(\"在 \"),a(\"code\",[t._v(\"Python\")]),t._v(\" 中，如果 \"),a(\"strong\",[t._v(\"变量名\")]),t._v(\" 需要由 \"),a(\"strong\",[t._v(\"二个\")]),t._v(\" 或 \"),a(\"strong\",[t._v(\"多个单词\")]),t._v(\" 组成时，可以按照以下方式命名\\n\"),a(\"ol\",[a(\"li\",[t._v(\"每个单词都使用小写字母\")]),t._v(\" \"),a(\"li\",[t._v(\"单词与单词之间使用 \"),a(\"strong\",[a(\"code\",[t._v(\"_\")]),t._v(\"下划线\")]),t._v(\" 连接\")])])])]),t._v(\" \"),a(\"p\",[t._v(\"驼峰命名法\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"当 \"),a(\"strong\",[t._v(\"变量名\")]),t._v(\" 是由二个或多个单词组成时，还可以利用驼峰命名法来命名\")]),t._v(\" \"),a(\"li\",[a(\"strong\",[t._v(\"小驼峰式命名法\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"第一个单词以小写字母开始，后续单词的首字母大写\")]),t._v(\" \"),a(\"li\",[t._v(\"例如：\"),a(\"code\",[t._v(\"firstName\")]),t._v(\"、\"),a(\"code\",[t._v(\"lastName\")])])])]),t._v(\" \"),a(\"li\",[a(\"strong\",[t._v(\"大驼峰式命名法\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"每一个单词的首字母都采用大写字母\")]),t._v(\" \"),a(\"li\",[t._v(\"例如：\"),a(\"code\",[t._v(\"FirstName\")]),t._v(\"、\"),a(\"code\",[t._v(\"LastName\")]),t._v(\"、\"),a(\"code\",[t._v(\"CamelCase\")])])])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"判断-if-语句\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#判断-if-语句\"}},[t._v(\"#\")]),t._v(\" 判断(if)语句\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"if语句体验\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#if语句体验\"}},[t._v(\"#\")]),t._v(\" if语句体验\")]),t._v(\" \"),a(\"p\",[t._v(\"在 \"),a(\"code\",[t._v(\"Python\")]),t._v(\" 中，\"),a(\"strong\",[t._v(\"if 语句\")]),t._v(\" 就是用来进行判断的，格式如下：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-python extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" 条件\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n    条件\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"满足执行的代码\\n    ……\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"elif\")]),t._v(\" 条件\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n    条件\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\"满足时，执行的代码\\n    ……\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"elif\")]),t._v(\" 条件\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n    条件\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),t._v(\"满足时，执行的代码\\n    ……\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"else\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n    以上条件都不满足时，执行的代码\\n    ……\\n\")])])]),a(\"p\",[a(\"strong\",[t._v(\"注意\")])]),t._v(\" \"),a(\"blockquote\",[a(\"ul\",[a(\"li\",[t._v(\"代码的缩进为一个 \"),a(\"code\",[t._v(\"tab\")]),t._v(\" 键，或者 \"),a(\"strong\",[t._v(\"4\")]),t._v(\" 个空格 —— \"),a(\"strong\",[t._v(\"建议使用空格\")])]),t._v(\" \"),a(\"li\",[t._v(\"在 Python 开发中，Tab 和空格不要混用！\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"if\")]),t._v(\"、\"),a(\"code\",[t._v(\"elif\")]),t._v(\" 和 \"),a(\"code\",[t._v(\"else\")]),t._v(\" 语句以及各自的缩进部分共同是一个 **完整的代码块\")])])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"逻辑运算\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#逻辑运算\"}},[t._v(\"#\")]),t._v(\" 逻辑运算\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"在程序开发中，通常 \"),a(\"strong\",[t._v(\"在判断条件时\")]),t._v(\"，会需要同时判断多个条件\")]),t._v(\" \"),a(\"li\",[t._v(\"只有多个条件都满足，才能够执行后续代码，这个时候需要使用到 \"),a(\"strong\",[t._v(\"逻辑运算符\")])]),t._v(\" \"),a(\"li\",[a(\"strong\",[t._v(\"逻辑运算符\")]),t._v(\" 可以把 \"),a(\"strong\",[t._v(\"多个条件\")]),t._v(\" 按照 \"),a(\"strong\",[t._v(\"逻辑\")]),t._v(\" 进行 \"),a(\"strong\",[t._v(\"连接\")]),t._v(\"，变成 \"),a(\"strong\",[t._v(\"更复杂的条件\")])]),t._v(\" \"),a(\"li\",[t._v(\"Python 中的 \"),a(\"strong\",[t._v(\"逻辑运算符\")]),t._v(\" 包括：\"),a(\"strong\",[t._v(\"与 and\")]),t._v(\"／\"),a(\"strong\",[t._v(\"或 or\")]),t._v(\"／\"),a(\"strong\",[t._v(\"非 not\")]),t._v(\" 三种\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-python extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[t._v(\"条件\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"and\")]),t._v(\" 条件\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\"\\n条件\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"or\")]),t._v(\" 条件\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"not\")]),t._v(\" 条件\\n\")])])]),a(\"h3\",{attrs:{id:\"循环\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#循环\"}},[t._v(\"#\")]),t._v(\" 循环\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"while循环基本\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#while循环基本\"}},[t._v(\"#\")]),t._v(\" while循环基本\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-python extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"while\")]),t._v(\" 条件\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"判断 计数器 是否达到 目标次数\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n    条件满足时，做的事情\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"\\n    条件满足时，做的事情\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\"\\n    条件满足时，做的事情\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"省略\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"\\n    \\n    处理条件\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"计数器 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),a(\"p\",[a(\"strong\",[t._v(\"注意\")]),t._v(\"：\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"code\",[t._v(\"while\")]),t._v(\" 语句以及缩进部分是一个 \"),a(\"strong\",[t._v(\"完整的代码块\")]),t._v(\"。\")]),t._v(\" \"),a(\"li\",[t._v(\"循环结束后，之前定义的计数器条件的数值是依旧存在的。\")]),t._v(\" \"),a(\"li\",[t._v(\"由于程序员的原因，忘记在循环内部修改循环的判断条件，导致循环持续执行，程序无法终止。\")])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"break-和-continue\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#break-和-continue\"}},[t._v(\"#\")]),t._v(\" break 和 continue\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"code\",[t._v(\"break\")]),t._v(\" 和 \"),a(\"code\",[t._v(\"continue\")]),t._v(\" 是专门在循环中使用的关键字。\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"break\")]),t._v(\" \"),a(\"strong\",[t._v(\"某一条件满足时\")]),t._v(\"，退出循环，不再执行后续重复的代码。\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"continue\")]),t._v(\" \"),a(\"strong\",[t._v(\"某一条件满足时\")]),t._v(\"，不需要执行循环代码，而其他条件都需要执行。\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"字符串中的转义字符\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#字符串中的转义字符\"}},[t._v(\"#\")]),t._v(\" 字符串中的转义字符\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"strong\",[t._v(\"制表符\")]),t._v(\" 的功能是在不使用表格的情况下在 \"),a(\"strong\",[t._v(\"垂直方向\")]),t._v(\" 按列对齐文本\")])]),t._v(\" \"),a(\"table\",[a(\"thead\",[a(\"tr\",[a(\"th\",[t._v(\"转义字符\")]),t._v(\" \"),a(\"th\",[t._v(\"描述\")])])]),t._v(\" \"),a(\"tbody\",[a(\"tr\",[a(\"td\",[t._v(\"\\\\\\\\\")]),t._v(\" \"),a(\"td\",[t._v(\"反斜杠符号\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"\\\\'\")]),t._v(\" \"),a(\"td\",[t._v(\"单引号\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v('\\\\\"')]),t._v(\" \"),a(\"td\",[t._v(\"双引号\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"\\\\n\")]),t._v(\" \"),a(\"td\",[t._v(\"换行\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"\\\\t\")]),t._v(\" \"),a(\"td\",[t._v(\"横向制表符\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",[t._v(\"\\\\r\")]),t._v(\" \"),a(\"td\",[t._v(\"回车\")])])])])])}),[],!1,null,null,null);s.default=_.exports}}]);","extractedComments":[]}