{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{392:function(t,a,s){\"use strict\";s.r(a);var n=s(18),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h2\",{attrs:{id:\"python函数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#python函数\"}},[t._v(\"#\")]),t._v(\" python函数\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"基本函数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#基本函数\"}},[t._v(\"#\")]),t._v(\" 基本函数\")]),t._v(\" \"),s(\"h4\",{attrs:{id:\"print函数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#print函数\"}},[t._v(\"#\")]),t._v(\" print函数\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"功能：输出变量到控制台。在默认情况下，print 函数输出内容之后，会自动在内容末尾增加换行。如果不希望末尾增加换行，可以在 print 函数输出内容的后面增加 \"),s(\"code\",[t._v('end=\"\"')]),t._v(\"，其中 \"),s(\"code\",[t._v('\"\"')]),t._v(\" 中间可以指定 \"),s(\"code\",[t._v(\"print\")]),t._v(\" 函数输出内容之后，继续希望显示的内容。\")]),t._v(\" \"),s(\"li\",[t._v(\"例子：\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-python extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 向控制台输出内容结束之后，不会换行\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"print\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"*\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" end\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),s(\"h4\",{attrs:{id:\"type函数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#type函数\"}},[t._v(\"#\")]),t._v(\" type函数\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"功能：查看变量类型\")])]),t._v(\" \"),s(\"h4\",{attrs:{id:\"input函数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#input函数\"}},[t._v(\"#\")]),t._v(\" input函数\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"语法：\"),s(\"code\",[t._v('字符串变量 = input(\"提示信息：\")')])]),t._v(\" \"),s(\"li\",[t._v(\"功能：从键盘等待用户的输入，输入的任何内容python都认为是一个字符串\")])]),t._v(\" \"),s(\"h4\",{attrs:{id:\"list函数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#list函数\"}},[t._v(\"#\")]),t._v(\" list函数\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"功能：把元组转换成列表\")]),t._v(\" \"),s(\"li\",[t._v(\"例子：\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-python extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"list\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"元组\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \\n\")])])]),s(\"h4\",{attrs:{id:\"tuple函数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#tuple函数\"}},[t._v(\"#\")]),t._v(\" tuple函数\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"功能：把列表转换成元组\")]),t._v(\" \"),s(\"li\",[t._v(\"例子：\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-python extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"tuple\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"列表\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),s(\"h3\",{attrs:{id:\"random工具包函数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#random工具包函数\"}},[t._v(\"#\")]),t._v(\" random工具包函数\")]),t._v(\" \"),s(\"h4\",{attrs:{id:\"randint函数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#randint函数\"}},[t._v(\"#\")]),t._v(\" randint函数\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"语法：\"),s(\"code\",[t._v(\"random.randint(a, b)\")])]),t._v(\" \"),s(\"li\",[t._v(\"功能：生成 [a, b] 之间的随机整数，包含 a 和 b\")]),t._v(\" \"),s(\"li\",[t._v(\"例子：\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-python extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[s(\"code\",[t._v(\"random\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"randint\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"12\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"20\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"  \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 生成的随机数n: 12 <= n <= 20   \")]),t._v(\"\\nrandom\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"randint\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"20\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"20\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"  \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 结果永远是 20   \")]),t._v(\"\\nrandom\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"randint\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"20\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"  \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 该语句是错误的，下限必须小于上限\")]),t._v(\"\\n\")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);","extractedComments":[]}